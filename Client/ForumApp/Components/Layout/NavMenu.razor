@using ForumApp.Services
@inject AuthenticationService AuthService
@inject IUserService UserService

<LoginModal @ref="loginModal" OnLoginSuccess="HandleLoginSuccess" />
<CreateUserModal @ref="createUserModal" OnUserCreated="HandleUserCreated" />

<div class="top-row ps-3 navbar navbar-dark d-flex flex-column flex-shrink">
    <div class="container-fluid">
        <a class="navbar-brand" href="">ForumApp</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column mb-auto">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="user">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> User
            </NavLink>
        </div>

        <hr/>

        <div class="nav-item px-3 d-flex flex-column align-items-center">
            @if (!AuthService.IsLoggedIn)
            {
                <button class="btn btn-outline-light" @onclick="loginModal.ShowModal">Log in</button>
                <button type="button" class="btn btn-outline-primary mt-4" @onclick="createUserModal.ShowModal">Create User</button>
            }
            else
            {
                <span class="text-white">Welcome, @authenticatedUsername!</span>
                <button class="btn btn-outline-light btn-sm mt-4" @onclick="LogoutAsync">Log out</button>
            }
        </div>
    </nav>
</div>

@code {
    private LoginModal? loginModal;
    private CreateUserModal? createUserModal;

    private string authenticatedUsername = string.Empty;

    private void HandleLoginSuccess()
    {
        authenticatedUsername = AuthService.Username;
    }

    private void HandleUserCreated()
    {
        // not implemented yes
    }

    private async Task LogoutAsync()
    {
        await AuthService.LogoutAsync();
        authenticatedUsername = string.Empty;
    }
}

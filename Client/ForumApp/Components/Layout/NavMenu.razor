@using ForumApp.Components.Authentication
@using ForumApp.Services
@inject AuthenticationStateProvider AuthProvider
@inject IUserService UserService

<LoginModal @ref="loginModal"/>
<CreateUserModal @ref="createUserModal"/>

<div class="top-row ps-3 navbar navbar-dark d-flex flex-column flex-shrink">
    <div class="container-fluid">
        <a class="navbar-brand" href="">ForumApp</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column mb-auto">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <hr/>

        <div class="nav-item px-3 d-flex flex-column align-items-center">
            <AuthorizeView>
                <NotAuthorized>
                    <button class="btn btn-outline-primary" @onclick="ShowLoginModal">Log in</button>
                    <button type="button" class="btn btn-outline-light mt-4" @onclick="ShowCreateUserModal">Create User</button>
                </NotAuthorized>
                <Authorized>
                    <span class="text-white">Welcome, @context.User.Identity.Name!</span>
                    <button class="btn btn-outline-light btn-sm mt-4" @onclick="LogoutAsync">Log out</button>
                </Authorized>
            </AuthorizeView>
            
        </div>
    </nav>
</div>

@code {
    private LoginModal? loginModal;
    private CreateUserModal? createUserModal;
    
    private void ShowLoginModal()
    {
        loginModal?.ShowModal();
    }

    private void ShowCreateUserModal()
    {
        createUserModal?.ShowModal();
    }

    private async Task LogoutAsync()
    {
        ((SimpleAuthProvider)AuthProvider).Logout();

        await InvokeAsync(StateHasChanged);
    }
}
